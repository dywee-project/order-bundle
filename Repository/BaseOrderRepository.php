<?php

namespace Dywee\OrderBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BaseOrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BaseOrderRepository extends EntityRepository
{
    public function findAllForPagination($state = null)
    {
        $qb = $this->createQueryBuilder('o');
        if($state)
        {
            $qb->where('o.state = :state and o.totalPrice > 0');
            $qb->setParameters(array('state' => $state));
        }
        $qb->orderBy('o.creationDate', 'desc');

        return $qb;
    }

    public function findAllByTypeAndData($type, $data)
    {
        $qb = $this->createQueryBuilder('o')
            ->where('o.creationDate < :date and o.state = 1')
            ->setParameter('date', new \DateTime());

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function countByState($state = 2)
    {
        $qb = $this->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->where('o.state = :state')
            ->setParameter('state', $state);

        return $qb->getQuery()->getSingleResult();
    }

    public function findByMonth($month, $state)
    {
        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
        $emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');
        //$emConfig->addCustomDatetimeFunction('DAY', 'DoctrineExtensions\Query\Mysql\Day');

        $today = getdate();
        $month = $today['mon'];
        $year = $today['year'];

        if($month == 'previous')
        {
            $month--;
            if($month == 0)
            {
                $month = 12;
                $year--;
            }
        }

        $qb = $this->createQueryBuilder('o');
        $qb
            ->where('YEAR(o.validationDate) > :year and MONTH(o.validationDate) = :month and o.validationDate and o.state = 2')
            ->setParameter('month', $month)
            ->setParameter('year', $year);

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
